(*cobra.Command)(0xf730e0)({
 Use: (string) (len=8) "gospider",
 Aliases: ([]string) <nil>,
 SuggestFor: ([]string) <nil>,
 Short: (string) "",
 Long: (string) (len=70) "Fast web spider written in Go - v1.1.6 by @thebl4ckturtle & @j3ssiejjj",
 Example: (string) "",
 ValidArgs: ([]string) <nil>,
 ValidArgsFunction: (func(*cobra.Command, []string, string) ([]string, cobra.ShellCompDirective)) <nil>,
 Args: (cobra.PositionalArgs) <nil>,
 ArgAliases: ([]string) <nil>,
 BashCompletionFunction: (string) "",
 Deprecated: (string) "",
 Annotations: (map[string]string) <nil>,
 Version: (string) "",
 PersistentPreRun: (func(*cobra.Command, []string)) <nil>,
 PersistentPreRunE: (func(*cobra.Command, []string) error) <nil>,
 PreRun: (func(*cobra.Command, []string)) <nil>,
 PreRunE: (func(*cobra.Command, []string) error) <nil>,
 Run: (func(*cobra.Command, []string)) 0x8f6400,
 RunE: (func(*cobra.Command, []string) error) <nil>,
 PostRun: (func(*cobra.Command, []string)) <nil>,
 PostRunE: (func(*cobra.Command, []string) error) <nil>,
 PersistentPostRun: (func(*cobra.Command, []string)) <nil>,
 PersistentPostRunE: (func(*cobra.Command, []string) error) <nil>,
 args: ([]string) <nil>,
 flagErrorBuf: (*bytes.Buffer)(0xc0002cbb90)(),
 flags: (*pflag.FlagSet)(0xc0001be400)({
  Usage: (func()) <nil>,
  SortFlags: (bool) false,
  ParseErrorsWhitelist: (pflag.ParseErrorsWhitelist) {
   UnknownFlags: (bool) false
  },
  name: (string) (len=8) "gospider",
  parsed: (bool) true,
  actual: (map[pflag.NormalizedName]*pflag.Flag) (len=1) {
   (pflag.NormalizedName) (len=4) "site": (*pflag.Flag)(0xc0001c6b40)({
    Name: (string) (len=4) "site",
    Shorthand: (string) (len=1) "s",
    Usage: (string) (len=13) "Site to crawl",
    Value: (*pflag.stringValue)(0xc0002c2c30)((len=23) https://www.fis.com.vn/),
    DefValue: (string) "",
    Changed: (bool) true,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   })
  },
  orderedActual: ([]*pflag.Flag) (len=1 cap=1) {
   (*pflag.Flag)(0xc0001c6b40)({
    Name: (string) (len=4) "site",
    Shorthand: (string) (len=1) "s",
    Usage: (string) (len=13) "Site to crawl",
    Value: (*pflag.stringValue)(0xc0002c2c30)((len=23) https://www.fis.com.vn/),
    DefValue: (string) "",
    Changed: (bool) true,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   })
  },
  sortedActual: ([]*pflag.Flag) <nil>,
  formal: (map[pflag.NormalizedName]*pflag.Flag) (len=35) {
   (pflag.NormalizedName) (len=5) "proxy": (*pflag.Flag)(0xc0001c6c80)({
    Name: (string) (len=5) "proxy",
    Shorthand: (string) (len=1) "p",
    Usage: (string) (len=33) "Proxy (Ex: http://127.0.0.1:8080)",
    Value: (*pflag.stringValue)(0xc0002c2c60)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=16) "whitelist-domain": (*pflag.Flag)(0xc0001c7180)({
    Name: (string) (len=16) "whitelist-domain",
    Shorthand: (string) "",
    Usage: (string) (len=16) "Whitelist Domain",
    Value: (*pflag.stringValue)(0xc0002c2ce0)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=13) "filter-length": (*pflag.Flag)(0xc0001c7220)({
    Name: (string) (len=13) "filter-length",
    Shorthand: (string) (len=1) "L",
    Usage: (string) (len=21) "Turn on length filter",
    Value: (*pflag.stringValue)(0xc0002c2cf0)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=10) "concurrent": (*pflag.Flag)(0xc0001c7360)({
    Name: (string) (len=10) "concurrent",
    Shorthand: (string) (len=1) "c",
    Usage: (string) (len=77) "The number of the maximum allowed concurrent requests of the matching domains",
    Value: (*pflag.intValue)(0xc0002dc150)(5),
    DefValue: (string) (len=1) "5",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=5) "delay": (*pflag.Flag)(0xc0001c74a0)({
    Name: (string) (len=5) "delay",
    Shorthand: (string) (len=1) "k",
    Usage: (string) (len=92) "Delay is the duration to wait before creating a new request to the matching domains (second)",
    Value: (*pflag.intValue)(0xc0002dc160)(0),
    DefValue: (string) (len=1) "0",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=4) "base": (*pflag.Flag)(0xc0001c7680)({
    Name: (string) (len=4) "base",
    Shorthand: (string) (len=1) "B",
    Usage: (string) (len=37) "Disable all and only use HTML content",
    Value: (*pflag.boolValue)(0xc0002dc178)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=5) "quiet": (*pflag.Flag)(0xc0001c7d60)({
    Name: (string) (len=5) "quiet",
    Shorthand: (string) (len=1) "q",
    Usage: (string) (len=41) "Suppress all the output and only show URL",
    Value: (*pflag.boolValue)(0xc0002dc183)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=7) "version": (*pflag.Flag)(0xc0001c7ea0)({
    Name: (string) (len=7) "version",
    Shorthand: (string) "",
    Usage: (string) (len=13) "Check version",
    Value: (*pflag.boolValue)(0xc0002dc185)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=3) "raw": (*pflag.Flag)(0xc0002ea000)({
    Name: (string) (len=3) "raw",
    Shorthand: (string) (len=1) "R",
    Usage: (string) (len=17) "Enable raw output",
    Value: (*pflag.boolValue)(0xc0002dc187)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=4) "site": (*pflag.Flag)(0xc0001c6b40)({
    Name: (string) (len=4) "site",
    Shorthand: (string) (len=1) "s",
    Usage: (string) (len=13) "Site to crawl",
    Value: (*pflag.stringValue)(0xc0002c2c30)((len=23) https://www.fis.com.vn/),
    DefValue: (string) "",
    Changed: (bool) true,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=5) "depth": (*pflag.Flag)(0xc0001c7400)({
    Name: (string) (len=5) "depth",
    Shorthand: (string) (len=1) "d",
    Usage: (string) (len=89) "MaxDepth limits the recursion depth of visited URLs. (Set it to 0 for infinite recursion)",
    Value: (*pflag.intValue)(0xc0002dc158)(1),
    DefValue: (string) (len=1) "1",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=11) "no-redirect": (*pflag.Flag)(0xc0001c7e00)({
    Name: (string) (len=11) "no-redirect",
    Shorthand: (string) "",
    Usage: (string) (len=16) "Disable redirect",
    Value: (*pflag.boolValue)(0xc0002dc184)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=6) "output": (*pflag.Flag)(0xc0001c6d20)({
    Name: (string) (len=6) "output",
    Shorthand: (string) (len=1) "o",
    Usage: (string) (len=13) "Output folder",
    Value: (*pflag.stringValue)(0xc0002c2c70)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=6) "robots": (*pflag.Flag)(0xc0001c7860)({
    Name: (string) (len=6) "robots",
    Shorthand: (string) "",
    Usage: (string) (len=23) "Try to crawl robots.txt",
    Value: (*pflag.boolValue)(0xc0002dc17b)(true),
    DefValue: (string) (len=4) "true",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=9) "blacklist": (*pflag.Flag)(0xc0001c7040)({
    Name: (string) (len=9) "blacklist",
    Shorthand: (string) "",
    Usage: (string) (len=19) "Blacklist URL Regex",
    Value: (*pflag.stringValue)(0xc0002c2cc0)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=7) "timeout": (*pflag.Flag)(0xc0001c75e0)({
    Name: (string) (len=7) "timeout",
    Shorthand: (string) (len=1) "m",
    Usage: (string) (len=24) "Request timeout (second)",
    Value: (*pflag.intValue)(0xc0002dc170)(10),
    DefValue: (string) (len=2) "10",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=2) "js": (*pflag.Flag)(0xc0001c7720)({
    Name: (string) (len=2) "js",
    Shorthand: (string) "",
    Usage: (string) (len=36) "Enable linkfinder in javascript file",
    Value: (*pflag.boolValue)(0xc0002dc179)(true),
    DefValue: (string) (len=4) "true",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=5) "debug": (*pflag.Flag)(0xc0001c7b80)({
    Name: (string) (len=5) "debug",
    Shorthand: (string) "",
    Usage: (string) (len=18) "Turn on debug mode",
    Value: (*pflag.boolValue)(0xc0002dc180)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=7) "verbose": (*pflag.Flag)(0xc0001c7cc0)({
    Name: (string) (len=7) "verbose",
    Shorthand: (string) (len=1) "v",
    Usage: (string) (len=15) "Turn on verbose",
    Value: (*pflag.boolValue)(0xc0002dc182)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=6) "cookie": (*pflag.Flag)(0xc0001c6e60)({
    Name: (string) (len=6) "cookie",
    Shorthand: (string) "",
    Usage: (string) (len=32) "Cookie to use (testA=a; testB=b)",
    Value: (*pflag.stringValue)(0xc0002c2c90)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=6) "header": (*pflag.Flag)(0xc0001c6f00)({
    Name: (string) (len=6) "header",
    Shorthand: (string) (len=1) "H",
    Usage: (string) (len=56) "Header to use (Use multiple flag to set multiple header)",
    Value: (*pflag.stringArrayValue)(0xc0002c2ca0)([]),
    DefValue: (string) (len=2) "[]",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=9) "whitelist": (*pflag.Flag)(0xc0001c70e0)({
    Name: (string) (len=9) "whitelist",
    Shorthand: (string) "",
    Usage: (string) (len=19) "Whitelist URL Regex",
    Value: (*pflag.stringValue)(0xc0002c2cd0)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=12) "random-delay": (*pflag.Flag)(0xc0001c7540)({
    Name: (string) (len=12) "random-delay",
    Shorthand: (string) (len=1) "K",
    Usage: (string) (len=106) "RandomDelay is the extra randomized duration to wait added to Delay before creating a new request (second)",
    Value: (*pflag.intValue)(0xc0002dc168)(0),
    DefValue: (string) (len=1) "0",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=12) "other-source": (*pflag.Flag)(0xc0001c7900)({
    Name: (string) (len=12) "other-source",
    Shorthand: (string) (len=1) "a",
    Usage: (string) (len=87) "Find URLs from 3rd party (Archive.org, CommonCrawl.org, VirusTotal.com, AlienVault.com)",
    Value: (*pflag.boolValue)(0xc0002dc17c)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=6) "length": (*pflag.Flag)(0xc0001c7f40)({
    Name: (string) (len=6) "length",
    Shorthand: (string) (len=1) "l",
    Usage: (string) (len=14) "Turn on length",
    Value: (*pflag.boolValue)(0xc0002dc186)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=5) "sites": (*pflag.Flag)(0xc0001c6be0)({
    Name: (string) (len=5) "sites",
    Shorthand: (string) (len=1) "S",
    Usage: (string) (len=18) "Site list to crawl",
    Value: (*pflag.stringValue)(0xc0002c2c40)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=20) "include-other-source": (*pflag.Flag)(0xc0001c7a40)({
    Name: (string) (len=20) "include-other-source",
    Shorthand: (string) (len=1) "r",
    Usage: (string) (len=58) "Also include other-source's urls (still crawl and request)",
    Value: (*pflag.boolValue)(0xc0002dc17e)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=10) "user-agent": (*pflag.Flag)(0xc0001c6dc0)({
    Name: (string) (len=10) "user-agent",
    Shorthand: (string) (len=1) "u",
    Usage: (string) (len=117) "User Agent to use\n\tweb: random web user-agent\n\tmobi: random mobile user-agent\n\tor you can set your special user-agent",
    Value: (*pflag.stringValue)(0xc0002c2c80)((len=3) web),
    DefValue: (string) (len=3) "web",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=7) "threads": (*pflag.Flag)(0xc0001c72c0)({
    Name: (string) (len=7) "threads",
    Shorthand: (string) (len=1) "t",
    Usage: (string) (len=41) "Number of threads (Run sites in parallel)",
    Value: (*pflag.intValue)(0xc0002dc148)(1),
    DefValue: (string) (len=1) "1",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=7) "sitemap": (*pflag.Flag)(0xc0001c77c0)({
    Name: (string) (len=7) "sitemap",
    Shorthand: (string) "",
    Usage: (string) (len=24) "Try to crawl sitemap.xml",
    Value: (*pflag.boolValue)(0xc0002dc17a)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=4) "json": (*pflag.Flag)(0xc0001c7c20)({
    Name: (string) (len=4) "json",
    Shorthand: (string) "",
    Usage: (string) (len=18) "Enable JSON output",
    Value: (*pflag.boolValue)(0xc0002dc181)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=4) "help": (*pflag.Flag)(0xc00009c000)({
    Name: (string) (len=4) "help",
    Shorthand: (string) (len=1) "h",
    Usage: (string) (len=17) "help for gospider",
    Value: (*pflag.boolValue)(0xc000088009)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=4) "burp": (*pflag.Flag)(0xc0001c6fa0)({
    Name: (string) (len=4) "burp",
    Shorthand: (string) "",
    Usage: (string) (len=50) "Load headers and cookie from burp raw http request",
    Value: (*pflag.stringValue)(0xc0002c2cb0)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=12) "include-subs": (*pflag.Flag)(0xc0001c79a0)({
    Name: (string) (len=12) "include-subs",
    Shorthand: (string) (len=1) "w",
    Usage: (string) (len=65) "Include subdomains crawled from 3rd party. Default is main domain",
    Value: (*pflag.boolValue)(0xc0002dc17d)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (pflag.NormalizedName) (len=4) "subs": (*pflag.Flag)(0xc0001c7ae0)({
    Name: (string) (len=4) "subs",
    Shorthand: (string) "",
    Usage: (string) (len=18) "Include subdomains",
    Value: (*pflag.boolValue)(0xc0002dc17f)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   })
  },
  orderedFormal: ([]*pflag.Flag) (len=35 cap=64) {
   (*pflag.Flag)(0xc0001c6b40)({
    Name: (string) (len=4) "site",
    Shorthand: (string) (len=1) "s",
    Usage: (string) (len=13) "Site to crawl",
    Value: (*pflag.stringValue)(0xc0002c2c30)((len=23) https://www.fis.com.vn/),
    DefValue: (string) "",
    Changed: (bool) true,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c6be0)({
    Name: (string) (len=5) "sites",
    Shorthand: (string) (len=1) "S",
    Usage: (string) (len=18) "Site list to crawl",
    Value: (*pflag.stringValue)(0xc0002c2c40)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c6c80)({
    Name: (string) (len=5) "proxy",
    Shorthand: (string) (len=1) "p",
    Usage: (string) (len=33) "Proxy (Ex: http://127.0.0.1:8080)",
    Value: (*pflag.stringValue)(0xc0002c2c60)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c6d20)({
    Name: (string) (len=6) "output",
    Shorthand: (string) (len=1) "o",
    Usage: (string) (len=13) "Output folder",
    Value: (*pflag.stringValue)(0xc0002c2c70)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c6dc0)({
    Name: (string) (len=10) "user-agent",
    Shorthand: (string) (len=1) "u",
    Usage: (string) (len=117) "User Agent to use\n\tweb: random web user-agent\n\tmobi: random mobile user-agent\n\tor you can set your special user-agent",
    Value: (*pflag.stringValue)(0xc0002c2c80)((len=3) web),
    DefValue: (string) (len=3) "web",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c6e60)({
    Name: (string) (len=6) "cookie",
    Shorthand: (string) "",
    Usage: (string) (len=32) "Cookie to use (testA=a; testB=b)",
    Value: (*pflag.stringValue)(0xc0002c2c90)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c6f00)({
    Name: (string) (len=6) "header",
    Shorthand: (string) (len=1) "H",
    Usage: (string) (len=56) "Header to use (Use multiple flag to set multiple header)",
    Value: (*pflag.stringArrayValue)(0xc0002c2ca0)([]),
    DefValue: (string) (len=2) "[]",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c6fa0)({
    Name: (string) (len=4) "burp",
    Shorthand: (string) "",
    Usage: (string) (len=50) "Load headers and cookie from burp raw http request",
    Value: (*pflag.stringValue)(0xc0002c2cb0)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7040)({
    Name: (string) (len=9) "blacklist",
    Shorthand: (string) "",
    Usage: (string) (len=19) "Blacklist URL Regex",
    Value: (*pflag.stringValue)(0xc0002c2cc0)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c70e0)({
    Name: (string) (len=9) "whitelist",
    Shorthand: (string) "",
    Usage: (string) (len=19) "Whitelist URL Regex",
    Value: (*pflag.stringValue)(0xc0002c2cd0)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7180)({
    Name: (string) (len=16) "whitelist-domain",
    Shorthand: (string) "",
    Usage: (string) (len=16) "Whitelist Domain",
    Value: (*pflag.stringValue)(0xc0002c2ce0)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7220)({
    Name: (string) (len=13) "filter-length",
    Shorthand: (string) (len=1) "L",
    Usage: (string) (len=21) "Turn on length filter",
    Value: (*pflag.stringValue)(0xc0002c2cf0)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c72c0)({
    Name: (string) (len=7) "threads",
    Shorthand: (string) (len=1) "t",
    Usage: (string) (len=41) "Number of threads (Run sites in parallel)",
    Value: (*pflag.intValue)(0xc0002dc148)(1),
    DefValue: (string) (len=1) "1",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7360)({
    Name: (string) (len=10) "concurrent",
    Shorthand: (string) (len=1) "c",
    Usage: (string) (len=77) "The number of the maximum allowed concurrent requests of the matching domains",
    Value: (*pflag.intValue)(0xc0002dc150)(5),
    DefValue: (string) (len=1) "5",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7400)({
    Name: (string) (len=5) "depth",
    Shorthand: (string) (len=1) "d",
    Usage: (string) (len=89) "MaxDepth limits the recursion depth of visited URLs. (Set it to 0 for infinite recursion)",
    Value: (*pflag.intValue)(0xc0002dc158)(1),
    DefValue: (string) (len=1) "1",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c74a0)({
    Name: (string) (len=5) "delay",
    Shorthand: (string) (len=1) "k",
    Usage: (string) (len=92) "Delay is the duration to wait before creating a new request to the matching domains (second)",
    Value: (*pflag.intValue)(0xc0002dc160)(0),
    DefValue: (string) (len=1) "0",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7540)({
    Name: (string) (len=12) "random-delay",
    Shorthand: (string) (len=1) "K",
    Usage: (string) (len=106) "RandomDelay is the extra randomized duration to wait added to Delay before creating a new request (second)",
    Value: (*pflag.intValue)(0xc0002dc168)(0),
    DefValue: (string) (len=1) "0",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c75e0)({
    Name: (string) (len=7) "timeout",
    Shorthand: (string) (len=1) "m",
    Usage: (string) (len=24) "Request timeout (second)",
    Value: (*pflag.intValue)(0xc0002dc170)(10),
    DefValue: (string) (len=2) "10",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7680)({
    Name: (string) (len=4) "base",
    Shorthand: (string) (len=1) "B",
    Usage: (string) (len=37) "Disable all and only use HTML content",
    Value: (*pflag.boolValue)(0xc0002dc178)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7720)({
    Name: (string) (len=2) "js",
    Shorthand: (string) "",
    Usage: (string) (len=36) "Enable linkfinder in javascript file",
    Value: (*pflag.boolValue)(0xc0002dc179)(true),
    DefValue: (string) (len=4) "true",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c77c0)({
    Name: (string) (len=7) "sitemap",
    Shorthand: (string) "",
    Usage: (string) (len=24) "Try to crawl sitemap.xml",
    Value: (*pflag.boolValue)(0xc0002dc17a)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7860)({
    Name: (string) (len=6) "robots",
    Shorthand: (string) "",
    Usage: (string) (len=23) "Try to crawl robots.txt",
    Value: (*pflag.boolValue)(0xc0002dc17b)(true),
    DefValue: (string) (len=4) "true",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7900)({
    Name: (string) (len=12) "other-source",
    Shorthand: (string) (len=1) "a",
    Usage: (string) (len=87) "Find URLs from 3rd party (Archive.org, CommonCrawl.org, VirusTotal.com, AlienVault.com)",
    Value: (*pflag.boolValue)(0xc0002dc17c)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c79a0)({
    Name: (string) (len=12) "include-subs",
    Shorthand: (string) (len=1) "w",
    Usage: (string) (len=65) "Include subdomains crawled from 3rd party. Default is main domain",
    Value: (*pflag.boolValue)(0xc0002dc17d)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7a40)({
    Name: (string) (len=20) "include-other-source",
    Shorthand: (string) (len=1) "r",
    Usage: (string) (len=58) "Also include other-source's urls (still crawl and request)",
    Value: (*pflag.boolValue)(0xc0002dc17e)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7ae0)({
    Name: (string) (len=4) "subs",
    Shorthand: (string) "",
    Usage: (string) (len=18) "Include subdomains",
    Value: (*pflag.boolValue)(0xc0002dc17f)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7b80)({
    Name: (string) (len=5) "debug",
    Shorthand: (string) "",
    Usage: (string) (len=18) "Turn on debug mode",
    Value: (*pflag.boolValue)(0xc0002dc180)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7c20)({
    Name: (string) (len=4) "json",
    Shorthand: (string) "",
    Usage: (string) (len=18) "Enable JSON output",
    Value: (*pflag.boolValue)(0xc0002dc181)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7cc0)({
    Name: (string) (len=7) "verbose",
    Shorthand: (string) (len=1) "v",
    Usage: (string) (len=15) "Turn on verbose",
    Value: (*pflag.boolValue)(0xc0002dc182)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7d60)({
    Name: (string) (len=5) "quiet",
    Shorthand: (string) (len=1) "q",
    Usage: (string) (len=41) "Suppress all the output and only show URL",
    Value: (*pflag.boolValue)(0xc0002dc183)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7e00)({
    Name: (string) (len=11) "no-redirect",
    Shorthand: (string) "",
    Usage: (string) (len=16) "Disable redirect",
    Value: (*pflag.boolValue)(0xc0002dc184)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7ea0)({
    Name: (string) (len=7) "version",
    Shorthand: (string) "",
    Usage: (string) (len=13) "Check version",
    Value: (*pflag.boolValue)(0xc0002dc185)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0001c7f40)({
    Name: (string) (len=6) "length",
    Shorthand: (string) (len=1) "l",
    Usage: (string) (len=14) "Turn on length",
    Value: (*pflag.boolValue)(0xc0002dc186)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc0002ea000)({
    Name: (string) (len=3) "raw",
    Shorthand: (string) (len=1) "R",
    Usage: (string) (len=17) "Enable raw output",
    Value: (*pflag.boolValue)(0xc0002dc187)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (*pflag.Flag)(0xc00009c000)({
    Name: (string) (len=4) "help",
    Shorthand: (string) (len=1) "h",
    Usage: (string) (len=17) "help for gospider",
    Value: (*pflag.boolValue)(0xc000088009)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   })
  },
  sortedFormal: ([]*pflag.Flag) <nil>,
  shorthands: (map[uint8]*pflag.Flag) (len=22) {
   (uint8) 75: (*pflag.Flag)(0xc0001c7540)({
    Name: (string) (len=12) "random-delay",
    Shorthand: (string) (len=1) "K",
    Usage: (string) (len=106) "RandomDelay is the extra randomized duration to wait added to Delay before creating a new request (second)",
    Value: (*pflag.intValue)(0xc0002dc168)(0),
    DefValue: (string) (len=1) "0",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 109: (*pflag.Flag)(0xc0001c75e0)({
    Name: (string) (len=7) "timeout",
    Shorthand: (string) (len=1) "m",
    Usage: (string) (len=24) "Request timeout (second)",
    Value: (*pflag.intValue)(0xc0002dc170)(10),
    DefValue: (string) (len=2) "10",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 97: (*pflag.Flag)(0xc0001c7900)({
    Name: (string) (len=12) "other-source",
    Shorthand: (string) (len=1) "a",
    Usage: (string) (len=87) "Find URLs from 3rd party (Archive.org, CommonCrawl.org, VirusTotal.com, AlienVault.com)",
    Value: (*pflag.boolValue)(0xc0002dc17c)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 83: (*pflag.Flag)(0xc0001c6be0)({
    Name: (string) (len=5) "sites",
    Shorthand: (string) (len=1) "S",
    Usage: (string) (len=18) "Site list to crawl",
    Value: (*pflag.stringValue)(0xc0002c2c40)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 111: (*pflag.Flag)(0xc0001c6d20)({
    Name: (string) (len=6) "output",
    Shorthand: (string) (len=1) "o",
    Usage: (string) (len=13) "Output folder",
    Value: (*pflag.stringValue)(0xc0002c2c70)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 72: (*pflag.Flag)(0xc0001c6f00)({
    Name: (string) (len=6) "header",
    Shorthand: (string) (len=1) "H",
    Usage: (string) (len=56) "Header to use (Use multiple flag to set multiple header)",
    Value: (*pflag.stringArrayValue)(0xc0002c2ca0)([]),
    DefValue: (string) (len=2) "[]",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 76: (*pflag.Flag)(0xc0001c7220)({
    Name: (string) (len=13) "filter-length",
    Shorthand: (string) (len=1) "L",
    Usage: (string) (len=21) "Turn on length filter",
    Value: (*pflag.stringValue)(0xc0002c2cf0)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 112: (*pflag.Flag)(0xc0001c6c80)({
    Name: (string) (len=5) "proxy",
    Shorthand: (string) (len=1) "p",
    Usage: (string) (len=33) "Proxy (Ex: http://127.0.0.1:8080)",
    Value: (*pflag.stringValue)(0xc0002c2c60)(),
    DefValue: (string) "",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 100: (*pflag.Flag)(0xc0001c7400)({
    Name: (string) (len=5) "depth",
    Shorthand: (string) (len=1) "d",
    Usage: (string) (len=89) "MaxDepth limits the recursion depth of visited URLs. (Set it to 0 for infinite recursion)",
    Value: (*pflag.intValue)(0xc0002dc158)(1),
    DefValue: (string) (len=1) "1",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 104: (*pflag.Flag)(0xc00009c000)({
    Name: (string) (len=4) "help",
    Shorthand: (string) (len=1) "h",
    Usage: (string) (len=17) "help for gospider",
    Value: (*pflag.boolValue)(0xc000088009)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 119: (*pflag.Flag)(0xc0001c79a0)({
    Name: (string) (len=12) "include-subs",
    Shorthand: (string) (len=1) "w",
    Usage: (string) (len=65) "Include subdomains crawled from 3rd party. Default is main domain",
    Value: (*pflag.boolValue)(0xc0002dc17d)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 118: (*pflag.Flag)(0xc0001c7cc0)({
    Name: (string) (len=7) "verbose",
    Shorthand: (string) (len=1) "v",
    Usage: (string) (len=15) "Turn on verbose",
    Value: (*pflag.boolValue)(0xc0002dc182)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 107: (*pflag.Flag)(0xc0001c74a0)({
    Name: (string) (len=5) "delay",
    Shorthand: (string) (len=1) "k",
    Usage: (string) (len=92) "Delay is the duration to wait before creating a new request to the matching domains (second)",
    Value: (*pflag.intValue)(0xc0002dc160)(0),
    DefValue: (string) (len=1) "0",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 66: (*pflag.Flag)(0xc0001c7680)({
    Name: (string) (len=4) "base",
    Shorthand: (string) (len=1) "B",
    Usage: (string) (len=37) "Disable all and only use HTML content",
    Value: (*pflag.boolValue)(0xc0002dc178)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 114: (*pflag.Flag)(0xc0001c7a40)({
    Name: (string) (len=20) "include-other-source",
    Shorthand: (string) (len=1) "r",
    Usage: (string) (len=58) "Also include other-source's urls (still crawl and request)",
    Value: (*pflag.boolValue)(0xc0002dc17e)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 113: (*pflag.Flag)(0xc0001c7d60)({
    Name: (string) (len=5) "quiet",
    Shorthand: (string) (len=1) "q",
    Usage: (string) (len=41) "Suppress all the output and only show URL",
    Value: (*pflag.boolValue)(0xc0002dc183)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 115: (*pflag.Flag)(0xc0001c6b40)({
    Name: (string) (len=4) "site",
    Shorthand: (string) (len=1) "s",
    Usage: (string) (len=13) "Site to crawl",
    Value: (*pflag.stringValue)(0xc0002c2c30)((len=23) https://www.fis.com.vn/),
    DefValue: (string) "",
    Changed: (bool) true,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 117: (*pflag.Flag)(0xc0001c6dc0)({
    Name: (string) (len=10) "user-agent",
    Shorthand: (string) (len=1) "u",
    Usage: (string) (len=117) "User Agent to use\n\tweb: random web user-agent\n\tmobi: random mobile user-agent\n\tor you can set your special user-agent",
    Value: (*pflag.stringValue)(0xc0002c2c80)((len=3) web),
    DefValue: (string) (len=3) "web",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 116: (*pflag.Flag)(0xc0001c72c0)({
    Name: (string) (len=7) "threads",
    Shorthand: (string) (len=1) "t",
    Usage: (string) (len=41) "Number of threads (Run sites in parallel)",
    Value: (*pflag.intValue)(0xc0002dc148)(1),
    DefValue: (string) (len=1) "1",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 99: (*pflag.Flag)(0xc0001c7360)({
    Name: (string) (len=10) "concurrent",
    Shorthand: (string) (len=1) "c",
    Usage: (string) (len=77) "The number of the maximum allowed concurrent requests of the matching domains",
    Value: (*pflag.intValue)(0xc0002dc150)(5),
    DefValue: (string) (len=1) "5",
    Changed: (bool) false,
    NoOptDefVal: (string) "",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 108: (*pflag.Flag)(0xc0001c7f40)({
    Name: (string) (len=6) "length",
    Shorthand: (string) (len=1) "l",
    Usage: (string) (len=14) "Turn on length",
    Value: (*pflag.boolValue)(0xc0002dc186)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   }),
   (uint8) 82: (*pflag.Flag)(0xc0002ea000)({
    Name: (string) (len=3) "raw",
    Shorthand: (string) (len=1) "R",
    Usage: (string) (len=17) "Enable raw output",
    Value: (*pflag.boolValue)(0xc0002dc187)(false),
    DefValue: (string) (len=5) "false",
    Changed: (bool) false,
    NoOptDefVal: (string) (len=4) "true",
    Deprecated: (string) "",
    Hidden: (bool) false,
    ShorthandDeprecated: (string) "",
    Annotations: (map[string][]string) <nil>
   })
  },
  args: ([]string) (cap=2) {
  },
  argsLenAtDash: (int) -1,
  errorHandling: (pflag.ErrorHandling) 0,
  output: (*bytes.Buffer)(0xc0002cbb90)(),
  interspersed: (bool) true,
  normalizeNameFunc: (func(*pflag.FlagSet, string) pflag.NormalizedName) <nil>,
  addedGoFlagSets: ([]*flag.FlagSet) <nil>
 }),
 pflags: (*pflag.FlagSet)(0xc00009a100)({
  Usage: (func()) <nil>,
  SortFlags: (bool) true,
  ParseErrorsWhitelist: (pflag.ParseErrorsWhitelist) {
   UnknownFlags: (bool) false
  },
  name: (string) (len=8) "gospider",
  parsed: (bool) false,
  actual: (map[pflag.NormalizedName]*pflag.Flag) <nil>,
  orderedActual: ([]*pflag.Flag) <nil>,
  sortedActual: ([]*pflag.Flag) <nil>,
  formal: (map[pflag.NormalizedName]*pflag.Flag) <nil>,
  orderedFormal: ([]*pflag.Flag) <nil>,
  sortedFormal: ([]*pflag.Flag) <nil>,
  shorthands: (map[uint8]*pflag.Flag) <nil>,
  args: ([]string) <nil>,
  argsLenAtDash: (int) -1,
  errorHandling: (pflag.ErrorHandling) 0,
  output: (*bytes.Buffer)(0xc0002cbb90)(),
  interspersed: (bool) true,
  normalizeNameFunc: (func(*pflag.FlagSet, string) pflag.NormalizedName) <nil>,
  addedGoFlagSets: ([]*flag.FlagSet) <nil>
 }),
 lflags: (*pflag.FlagSet)(<nil>),
 iflags: (*pflag.FlagSet)(<nil>),
 parentsPflags: (*pflag.FlagSet)(0xc00009a000)({
  Usage: (func()) <nil>,
  SortFlags: (bool) false,
  ParseErrorsWhitelist: (pflag.ParseErrorsWhitelist) {
   UnknownFlags: (bool) false
  },
  name: (string) (len=8) "gospider",
  parsed: (bool) false,
  actual: (map[pflag.NormalizedName]*pflag.Flag) <nil>,
  orderedActual: ([]*pflag.Flag) <nil>,
  sortedActual: ([]*pflag.Flag) <nil>,
  formal: (map[pflag.NormalizedName]*pflag.Flag) <nil>,
  orderedFormal: ([]*pflag.Flag) <nil>,
  sortedFormal: ([]*pflag.Flag) <nil>,
  shorthands: (map[uint8]*pflag.Flag) <nil>,
  args: ([]string) <nil>,
  argsLenAtDash: (int) -1,
  errorHandling: (pflag.ErrorHandling) 0,
  output: (*bytes.Buffer)(0xc0002cbb90)(),
  interspersed: (bool) true,
  normalizeNameFunc: (func(*pflag.FlagSet, string) pflag.NormalizedName) <nil>,
  addedGoFlagSets: ([]*flag.FlagSet) <nil>
 }),
 globNormFunc: (func(*pflag.FlagSet, string) pflag.NormalizedName) <nil>,
 usageFunc: (func(*cobra.Command) error) <nil>,
 usageTemplate: (string) "",
 flagErrorFunc: (func(*cobra.Command, error) error) <nil>,
 helpTemplate: (string) "",
 helpFunc: (func(*cobra.Command, []string)) <nil>,
 helpCommand: (*cobra.Command)(<nil>),
 versionTemplate: (string) "",
 inReader: (io.Reader) <nil>,
 outWriter: (io.Writer) <nil>,
 errWriter: (io.Writer) <nil>,
 FParseErrWhitelist: (cobra.FParseErrWhitelist) {
  UnknownFlags: (bool) false
 },
 commandsAreSorted: (bool) false,
 commandCalledAs: (struct { name string; called bool }) {
  name: (string) (len=8) "gospider",
  called: (bool) true
 },
 ctx: (*context.emptyCtx)(0xc000034220)(context.Background),
 commands: ([]*cobra.Command) {
 },
 parent: (*cobra.Command)(<nil>),
 commandsMaxUseLen: (int) 0,
 commandsMaxCommandPathLen: (int) 0,
 commandsMaxNameLen: (int) 0,
 TraverseChildren: (bool) false,
 Hidden: (bool) false,
 SilenceErrors: (bool) false,
 SilenceUsage: (bool) false,
 DisableFlagParsing: (bool) false,
 DisableAutoGenTag: (bool) false,
 DisableFlagsInUseLine: (bool) false,
 DisableSuggestions: (bool) false,
 SuggestionsMinimumDistance: (int) 0
})
